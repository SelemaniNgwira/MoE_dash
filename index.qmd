---
title: "Ministry of Education HIV/AIDS Sexuality Education Dashboard"
format: dashboard
---



```{r}


library(tidyverse)

library(plotly)

library(reactable)
library(bslib)
pacman::p_load(bsicons, shiny, ggspark, sparkline, tsibble)



```


# Overview of key Indicators

## Row{height=25%}



```{r}



value_box(
  title = "Data completeness rate",
  value = tags$div("80", class = "value-box-value"),
  showcase = bs_icon("percent"),
  theme = "text-success", 
  showcase_layout = "top right"
)

```



### 

```{r}
value_box(
  title = "Timeliness of CSE data reporting",
  value = "80",
  showcase = bsicons::bs_icon("percent"), 
  theme = "text-success", 
  showcase_layout = "top right"
  
)


```




## Row 

### Tab {width=60%}

```{r}

indicators <- c( "schools implementing CSE",
                "Student knowledge improvement rate",
                "HIV testing uptake",
                "GBV cases reported",
                "Condom availability",
                "Teacher CSE training coverage",
                "Dropout rate due to pregnancy"
               )

# Generate random numbers (e.g., between 1 and 100)
set.seed(123)  # for reproducibility
random_numbers <- sample(50:90, length(indicators), replace = TRUE)

# Combine into a data frame
district_data <- data.frame(indicators = indicators, RandomValue = random_numbers)



plot1<- district_data |> 
  ggplot(aes(reorder( x=indicators, RandomValue), y=RandomValue))+
  geom_col(fill="tomato")+
  coord_flip()+
  theme_classic()+
  theme(
    axis.text.x = element_text(angle = 0)
  )+
  labs(
    y= "Percentage of indicators ", 
    title = "Over performance of indicators", 
    subtitle = "Jan- April 2025", 
    x="Indicator Name"
  )


ggplotly(plot1)

```


### Tab 1 {.tabset}

```{r}

date_report<- c( 
            "2024-05-01",
            "2024-06-01",
            "2024-07-01",
            "2024-08-01",
            "2024-09-01",
            "2024-10-01",
            "2024-11-01", 
            "2024-12-01", 
            "2025-01-01", 
            "2025-02-01", 
            "2025-03-01", 
            "2025-04-01"
               )

date_report <- seq.Date(from = as.Date("2024-05-01"), by = "week", length.out = 52)



# Generate random numbers (e.g., between 1 and 100)
set.seed(123)  # for reproducibility
incidance_rate <- sample(1:14, length(date_report), replace = TRUE)


pregnancy_incidence<- data.frame(date_report= date_report, incidance_rate = incidance_rate)



pregnancy_incidence<- pregnancy_incidence |> 
  mutate(date_report=as.Date(date_report))


pregnancy_incidence <- tibble(pregnancy_incidence, index=date_report)

plot2<- pregnancy_incidence |> 
  ggplot(aes(x = date_report, y = incidance_rate)) +
  geom_line() +
  scale_x_date(date_breaks = "1 month", date_labels = "%b %Y") +
  labs(x = "Month", y = "Incidence Rate", title = "School Pregnancy Incidence Over Time") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))


ggplotly(plot2)

```



```{r}
date_report<- c( 
            "2024-05-01",
            "2024-06-01",
            "2024-07-01",
            "2024-08-01",
            "2024-09-01",
            "2024-10-01",
            "2024-11-01", 
            "2024-12-01", 
            "2025-01-01", 
            "2025-02-01", 
            "2025-03-01", 
            "2025-04-01"
               )

date_report <- seq.Date(from = as.Date("2024-05-01"), by = "week", length.out = 52)



# Generate random numbers (e.g., between 1 and 100)
set.seed(123)  # for reproducibility
incidance_rate <- sample(0:12, length(date_report), replace = TRUE)


pregnancy_incidence<- data.frame(date_report= date_report, incidance_rate = incidance_rate)



pregnancy_incidence<- pregnancy_incidence |> 
  mutate(date_report=as.Date(date_report))


pregnancy_incidence <- tibble(pregnancy_incidence, index=date_report)

plot2<- pregnancy_incidence |> 
  ggplot(aes(x = date_report, y = incidance_rate)) +
  geom_line() +
  scale_x_date(date_breaks = "1 month", date_labels = "%b %Y") +
  labs(x = "Month", y = "School drop out  Rate", 
       title = "Dropout rate due to pregnancy Over Time") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))


ggplotly(plot2)


```


# Indicators per District

## Row{height=50%}



```{r}
districts <- c("Balaka", "Chikwawa", "Chiradzulu", "Chitipa", "Dedza", "Dowa",
               "Karonga", "Kasungu", "Likoma", "Lilongwe", "Machinga", "Mangochi",
               "Mchinji", "Mulanje", "Mzimba", "Nkhata Bay", "Nkhota kota", "Nsanje",
               "Ntcheu", "Ntchisi", "Phalombe", "Rumphi", "Salima", "Thyolo", "Zomba",
               "Blantyre", "Neno", "Mwanza")

# Generate random numbers (e.g., between 1 and 100)
set.seed(123)  # for reproducibility
random_numbers <- sample(60:90, length(districts), replace = TRUE)

# Combine into a data frame
district_data <- data.frame(District = districts, RandomValue = random_numbers)



plot1<- district_data |> 
  ggplot(aes(reorder( x=District, RandomValue), y=RandomValue))+
  geom_col(fill="tomato")+
  theme_classic()+
  theme(
    axis.text.x = element_text(angle = 90)
  )+
  labs(
    y= "% Student knowledge improvement rate", 
    title = "Student knowledge improvement rate in school per District in Malawi", 
    subtitle = "Jan- April 2025", 
    x="District"
  )


ggplotly(plot1)


```



### 

```{r}
districts <- c("Balaka", "Chikwawa", "Chiradzulu", "Chitipa", "Dedza", "Dowa",
               "Karonga", "Kasungu", "Likoma", "Lilongwe", "Machinga", "Mangochi",
               "Mchinji", "Mulanje", "Mzimba", "Nkhata Bay", "Nkhota kota", "Nsanje",
               "Ntcheu", "Ntchisi", "Phalombe", "Rumphi", "Salima", "Thyolo", "Zomba",
               "Blantyre", "Neno", "Mwanza")

# Generate random numbers (e.g., between 1 and 100)
set.seed(123)  # for reproducibility
random_numbers <- sample(1:100, length(districts), replace = TRUE)

# Combine into a data frame
district_data <- data.frame(District = districts, RandomValue = random_numbers)



plot1<- district_data |> 
  ggplot(aes(reorder( x=District, RandomValue), y=RandomValue))+
  geom_col(fill="tomato")+
  theme_classic()+
  theme(
    axis.text.x = element_text(angle = 90)
  )+
  labs(
    y= "% of schools implementing CSE", 
    title = "CSE impelemention in school per District in Malawi", 
    subtitle = "Jan- April 2025", 
    x="District"
  )


ggplotly(plot1)


```




## Row 

### Tab {width=50%}

```{r}

districts <- c("Balaka", "Chikwawa", "Chiradzulu", "Chitipa", "Dedza", "Dowa",
               "Karonga", "Kasungu", "Likoma", "Lilongwe", "Machinga", "Mangochi",
               "Mchinji", "Mulanje", "Mzimba", "Nkhata Bay", "Nkhota kota", "Nsanje",
               "Ntcheu", "Ntchisi", "Phalombe", "Rumphi", "Salima", "Thyolo", "Zomba",
               "Blantyre", "Neno", "Mwanza")

# Generate random numbers (e.g., between 1 and 100)
set.seed(123)  # for reproducibility
random_numbers <- sample(20:80, length(districts), replace = TRUE)

# Combine into a data frame
district_data <- data.frame(District = districts, RandomValue = random_numbers)



plot1<- district_data |> 
  ggplot(aes(reorder( x=District, RandomValue), y=RandomValue))+
  geom_col(fill="tomato")+
  theme_classic()+
  theme(
    axis.text.x = element_text(angle = 90)
  )+
  labs(
    y= "% HIV testing uptake", 
    title = "HIV testing uptake in school per District in Malawi", 
    subtitle = "Jan- April 2025", 
    x="District"
  )


ggplotly(plot1)

```


### 

```{r}

districts <- c("Balaka", "Chikwawa", "Chiradzulu", "Chitipa", "Dedza", "Dowa",
               "Karonga", "Kasungu", "Likoma", "Lilongwe", "Machinga", "Mangochi",
               "Mchinji", "Mulanje", "Mzimba", "Nkhata Bay", "Nkhota kota", "Nsanje",
               "Ntcheu", "Ntchisi", "Phalombe", "Rumphi", "Salima", "Thyolo", "Zomba",
               "Blantyre", "Neno", "Mwanza")

# Generate random numbers (e.g., between 1 and 100)
set.seed(123)  # for reproducibility
random_numbers <- sample(60:100, length(districts), replace = TRUE)

# Combine into a data frame
district_data <- data.frame(District = districts, RandomValue = random_numbers)



plot1<- district_data |> 
  ggplot(aes(reorder( x=District, RandomValue), y=RandomValue))+
  geom_col(fill="tomato")+
  theme_classic()+
  theme(
    axis.text.x = element_text(angle = 90)
  )+
  labs(
    y= "% Teacher CSE training coverage", 
    title = "Teacher CSE training coverage in school per District in Malawi", 
    subtitle = "Jan- April 2025", 
    x="District"
  )


ggplotly(plot1)

```


